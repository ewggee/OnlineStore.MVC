@using OnlineStore.Contracts.Products

@model ShortProductDto

<div class="col-md-4 mb-4" style="margin: 0 auto;">
    <form id="addProductForm" asp-controller="AdminCatalog" asp-action="AddProduct" method="post" enctype="multipart/form-data">
        <div>
            <label for="mainImage">Титульное изображение</label>
            <input type="file" class="form-control" id="mainImage" name="mainImage" required />
        </div>
        <div id="mainImagePreview"></div>

        <div class="form-group">
            <label for="otherImages">Дополнительные изображения</label>
            <input type="file" class="form-control" id="otherImages" name="otherImages" multiple />
        </div>
        <div id="imagePreviews"></div>

        <div>
            <div>
                <label asp-for="Name">Название</label>
                <textarea class="form-control" asp-for="Name" rows="2" required></textarea>
            </div>
            <div>
                <label asp-for="Description">Описание</label>
                <textarea class="form-control" asp-for="Description" rows="4" required></textarea>
            </div>
            <div>
                <label asp-for="CategoryId">Категория</label>
                <select class="form-control" asp-for="CategoryId" asp-items="ViewBag.Categories"></select>
            </div>
            <div>
                <label asp-for="Price">Цена (₽)</label>
                <input type="number" class="form-control" asp-for="Price" step="0.01" min="0" value="0" required />
            </div>
            <div>
                <label asp-for="StockQuantity">Товаров в наличии (шт.)</label>
                <input type="number" class="form-control" asp-for="StockQuantity" step="1" min="0" value="0" required />
            </div>
            <div>
                <input class="btn btn-primary mt-3" type="submit" value="Добавить" />
            </div>
        </div>
    </form>
</div>

<script>
    // Титульное изображение
    document.getElementById('mainImage').addEventListener('change', function () {
        const file = this.files[0];
        const formData = new FormData();
        formData.append('imageFiles', file);

        fetch('@Url.Action("UploadImages", "Images")', {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data.length === 0) {
                    alert("Поддерживаются файлы только формата PNG, JPG или JPEG.");
                    const mainImageInput = document.getElementById('mainImage');
                    mainImageInput.value = '';
                    return;
                }
                
                const mainImagePreview = document.getElementById('mainImagePreview');
                mainImagePreview.innerHTML = '';
                
                const imgContainer = document.createElement('div');
                imgContainer.style.position = 'relative';
                imgContainer.style.display = 'inline-block';
                imgContainer.style.marginRight = '10px';

                const imgElement = document.createElement('img');
                const url = data[0];
                imgElement.src = url;
                imgElement.style.width = '150px';
                imgContainer.appendChild(imgElement);

                const deleteButton = document.createElement('button');
                deleteButton.textContent = 'x';
                deleteButton.style.position = 'absolute';
                deleteButton.style.top = '5px';
                deleteButton.style.right = '5px';
                deleteButton.style.backgroundColor = 'red';
                deleteButton.style.color = 'white';
                deleteButton.style.border = 'none';
                deleteButton.style.borderRadius = '50%';
                deleteButton.style.cursor = 'pointer';
                deleteButton.addEventListener('click', function () {
                    event.preventDefault();
                    fetch('@Url.Action("DeleteImage", "Images")', {
                    method: 'POST',
                    body: JSON.stringify({ imageUrl: url }),
                        headers: { 'Content-Type': 'application/json' }
                    }).then(response => {
                        if (response.ok) {
                            imgContainer.remove();
                            document.querySelector(`input[name="MainImageUrl"]`).remove();
                            const mainImageInput = document.getElementById('mainImage');
                            mainImageInput.value = '';
                        }
                    });
                });

                imgContainer.appendChild(deleteButton);
                mainImagePreview.appendChild(imgContainer);

                // Добавление URL титульного изображения в скрытое поле
                const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = 'MainImageUrl';
                    input.value = url;
                    document.getElementById('addProductForm').appendChild(input);
            });
    });

    // Дополнительные изображения
    document.getElementById('otherImages').addEventListener('change', function () {
        const files = this.files;
        const formData = new FormData();

        for (let i = 0; i < files.length; i++) {
            formData.append('imageFiles', files[i]);
        }

        fetch('@Url.Action("UploadImages", "Images")', {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data.length === 0) {
                    alert("Поддерживаются файлы только формата PNG, JPG или JPEG.");
                    const otherImagesInput = document.getElementById('otherImages');
                    otherImagesInput.value = '';
                    return;
                }

                const imagePreviews = document.getElementById('imagePreviews');
                imagePreviews.innerHTML = '';

                data.forEach((url, index) => {
                    const imgContainer = document.createElement('div');
                    imgContainer.style.position = 'relative';
                    imgContainer.style.display = 'inline-block';
                    imgContainer.style.marginRight = '10px';

                    const imgElement = document.createElement('img');
                    imgElement.src = url;
                    imgElement.style.width = '150px';
                    imgContainer.appendChild(imgElement);

                    const deleteButton = document.createElement('button');
                    deleteButton.textContent = 'X';
                    deleteButton.style.position = 'absolute';
                    deleteButton.style.top = '5px';
                    deleteButton.style.right = '5px';
                    deleteButton.style.backgroundColor = 'red';
                    deleteButton.style.color = 'white';
                    deleteButton.style.border = 'none';
                    deleteButton.style.borderRadius = '50%';
                    deleteButton.style.cursor = 'pointer';
                    deleteButton.addEventListener('click', function () {
                        event.preventDefault();
                        fetch('@Url.Action("DeleteImage", "Images")', {
                            method: 'POST',
                            body: JSON.stringify({ imageUrl: url }),
                            headers: { 'Content-Type': 'application/json' }
                        }).then(response => {
                            if (response.ok) {
                                imgContainer.remove();
                                document.querySelector(`input[name="ImagesUrls"][value="${url}"]`).remove();
                                const otherImagesInput = document.getElementById('otherImages');
                                otherImagesInput.value = '';
                            }
                        });
                    });

                    imgContainer.appendChild(deleteButton);
                    imagePreviews.appendChild(imgContainer);

                    const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = 'ImagesUrls';
                    input.value = url;
                    document.getElementById('addProductForm').appendChild(input);
                });
            });
    });
</script>